# Original Apache 2.4 EMREX configuration

Define SRVROOT "/etc/httpd"
Define SRVNAME "dans-emrexws.kmd.dk"
Define LOGS "/etc/httpd/logs"
Define MODULES "modules"

ServerRoot "${SRVROOT}"

Listen 80
Listen 443

LoadModule access_compat_module ${MODULES}/mod_access_compat.so
LoadModule actions_module ${MODULES}/mod_actions.so
LoadModule alias_module ${MODULES}/mod_alias.so
LoadModule allowmethods_module ${MODULES}/mod_allowmethods.so
LoadModule asis_module ${MODULES}/mod_asis.so
LoadModule auth_basic_module ${MODULES}/mod_auth_basic.so
LoadModule authn_core_module ${MODULES}/mod_authn_core.so
LoadModule authn_file_module ${MODULES}/mod_authn_file.so
LoadModule authz_core_module ${MODULES}/mod_authz_core.so
LoadModule authz_groupfile_module ${MODULES}/mod_authz_groupfile.so
LoadModule authz_host_module ${MODULES}/mod_authz_host.so
LoadModule authz_user_module ${MODULES}/mod_authz_user.so
LoadModule env_module ${MODULES}/mod_env.so
LoadModule include_module ${MODULES}/mod_include.so
LoadModule info_module ${MODULES}/mod_info.so
LoadModule lbmethod_byrequests_module ${MODULES}/mod_lbmethod_byrequests.so
LoadModule lbmethod_bytraffic_module ${MODULES}/mod_lbmethod_bytraffic.so
LoadModule log_config_module ${MODULES}/mod_log_config.so
LoadModule mime_module ${MODULES}/mod_mime.so
LoadModule negotiation_module ${MODULES}/mod_negotiation.so
LoadModule proxy_module ${MODULES}/mod_proxy.so
LoadModule proxy_balancer_module ${MODULES}/mod_proxy_balancer.so
LoadModule proxy_html_module ${MODULES}/mod_proxy_html.so
LoadModule proxy_http_module ${MODULES}/mod_proxy_http.so
LoadModule setenvif_module ${MODULES}/mod_setenvif.so
LoadModule slotmem_shm_module ${MODULES}/mod_slotmem_shm.so
LoadModule socache_shmcb_module ${MODULES}/mod_socache_shmcb.so
LoadModule ssl_module ${MODULES}/mod_ssl.so
LoadModule status_module ${MODULES}/mod_status.so
LoadModule xml2enc_module ${MODULES}/mod_xml2enc.so

<IfModule unixd_module>
	User apache
	Group apache
</IfModule>

<Directory />
    AllowOverride none
    Require all denied
</Directory>

<Files ".ht*">
    Require all denied
</Files>

LogLevel warn

LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %b" common

ErrorLog "${LOGS}/error.log"
CustomLog "${LOGS}/access.log" common

TypesConfig conf/mime.types

AddType application/x-compress .Z
AddType application/x-gzip .gz .tgz

<Proxy "balancer://ncp.cluster">
	BalancerMember "http://localhost:8000/"
</Proxy>

ProxyRequests On
ProxyPreserveHost On

<Proxy *>
	Require all granted
</Proxy>

<VirtualHost *:80>
    ServerName "${SRVNAME}:80"

    <LocationMatch "^/(?!server-status|server-info|emrextest)">
        ProxyPass        "balancer://ncp.cluster"
        ProxyPassReverse "balancer://ncp.cluster"
    </LocationMatch>

	<Location /server-info>
		SetHandler server-info
		Require local
	</Location>

    <Location /server-status>
		SetHandler server-status
		Require local
    </Location>

    <Location /emrextest>
        ProxyPass        "balancer://ncp.cluster"
        ProxyPassReverse "balancer://ncp.cluster"
    </Location>
</VirtualHost>

SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
SSLSessionCache        "shmcb:${LOGS}/ssl_scache(512000)"
SSLSessionCacheTimeout  300

<VirtualHost *:443>
    ServerName "${SRVNAME}:443"

	SSLEngine on
    SSLCertificateFile "${SRVROOT}/conf/ssl/server.crt"
    SSLCertificateKeyFile "${SRVROOT}/conf/ssl/server.key"

    <LocationMatch "^/(?!server-status|server-info|emrextest)">
        ProxyPass        "balancer://ncp.cluster"
        ProxyPassReverse "balancer://ncp.cluster"
    </LocationMatch>

	<Location /server-info>
		SetHandler server-info
		Require local
	</Location>

    <Location /server-status>
		SetHandler server-status
		Require local
    </Location>

    <Location /emrextest>
        ProxyPass        "balancer://ncp.cluster"
        ProxyPassReverse "balancer://ncp.cluster"
    </Location>
</VirtualHost>
